require 'json'
require 'fileutils'

require './lib/squasher'

options = {
  'name' => 'taylor_game',
  'version' => 'v0.0.1',
  'input' => 'game.rb',
  'export_directory' => './exports',
  'load_paths' => [
    './',
    './vendor',
  ],
  'copy_paths' => [
    './assets',
  ],
}

if File.exists?('../game/taylor-config.json')
  options.merge!(
    JSON.parse(File.read('../game/taylor-config.json'))
  )
end

task :build do
  sh "docker build . --pull --tag hellrok/taylor"
end

task :squash do
  Dir.chdir('../game')
  Squasher.call(options)
  Dir.chdir('../export')
end

task :transpile => :squash
task :transpile do
  sh "/app/mruby/bin/mrbc -Bgame -o game.h ./output.rb"
end

task :rename do
  Dir.chdir('../game')
  FileUtils.mkdir_p './exports'

  puts "Copying linux build"

  FileUtils.mkdir_p File.join('./exports', 'linux')
  FileUtils.cp Dir.glob('../taylor/dist/linux/release/*'),
    File.join('./', './exports', 'linux')

  puts "Copying windows build"

  FileUtils.mkdir_p File.join('./exports', 'windows')
  FileUtils.cp Dir.glob('../taylor/dist/windows/release/*'),
    File.join('./', './exports', 'windows')

  puts "Copying osx build"

  app_path = File.join(
    './exports',
    'osx',
    "#{options['name']}.app",
    'Contents',
    'MacOS'
  )
  FileUtils.mkdir_p(app_path)
  FileUtils.cp Dir.glob('../taylor/dist/osx/release/*'), app_path

  puts "Copying web build"
  FileUtils.mkdir_p File.join('./exports', 'web')
  FileUtils.cp Dir.glob('../taylor/dist/web/release/*'),
    File.join('./', './exports', 'web')
end

task :compress do
  Dir.chdir('./exports')

  Dir.chdir('./linux')
  options['copy_paths'].each { |asset_path| FileUtils.cp_r(File.join('/app/game/', asset_path), '.') }
  sh "zip -r \"#{options['name']}-linux-#{options['version']}.zip\" *"

  Dir.chdir('../windows')
  options['copy_paths'].each { |asset_path| FileUtils.cp_r(File.join('/app/game/', asset_path), '.') }
  sh "zip -r \"#{options['name']}-windows-#{options['version']}.zip\" *"

  Dir.chdir('../osx')
  app_path = File.join('.', "#{options['name']}.app", 'Contents', 'MacOS')
  FileUtils.mkdir_p(app_path)
  File.write(File.join(app_path, '..', 'PkgInfo'), 'APPL????APPL????')
  options['copy_paths'].each { |asset_path| FileUtils.cp_r(File.join('/app/game/', asset_path), app_path) }
  sh "zip -r \"#{options['name']}-osx-#{options['version']}.zip\" *"

  Dir.chdir('../web')
  sh "zip -r \"#{options['name']}-web-#{options['version']}.zip\" *"

  Dir.chdir('..')
  sh "mv **/*.zip ./"
  sh "rm -rf linux windows osx web"
end
