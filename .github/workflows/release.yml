---
name: "Tagged Release"

on:
  push:
    tags:
      - "v*"

jobs:
  tagged-release:
    name: "Tagged Release"
    runs-on: "ubuntu-latest"

    steps:
      -
        uses: actions/checkout@v2

      -
        name: "Get git tag"
        id: tag
        uses: dawidd6/action-get-tag@v1

      -
        name: "Login to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      -
        name: "Setup Dockerfile"
        env:
          VERSION: ${{ steps.tag.outputs.tag }}
        run: |
          # I would normally use a .template file by default here but this is
          # useful for actually running this tool while developing and didn't
          # want to have to manage it twice, so let's just move before we
          # envsubst
          mv ./cli-tool/taylor-config.json ./cli-tool/taylor-config.json.template
          envsubst < ./cli-tool/taylor-config.json.template > ./cli-tool/taylor-config.json

      -
        name: "Build Linux export image"
        uses: docker/build-push-action@v2
        with:
          context: ./scripts/export/
          file: ./scripts/export/Dockerfile.linux
          push: false
          tags: ${{secrets.DOCKER_USERNAME}}/taylor:latest,${{secrets.DOCKER_USERNAME}}/taylor:linux-${{steps.tag.outputs.tag}}

      -
        name: "Build Windows export image"
        uses: docker/build-push-action@v2
        with:
          context: ./scripts/export/
          file: ./scripts/export/Dockerfile.windows
          push: false
          tags: ${{secrets.DOCKER_USERNAME}}/taylor:windows-${{steps.tag.outputs.tag}}

      -
        name: "Build OSX export image"
        uses: docker/build-push-action@v2
        with:
          context: ./scripts/export/
          file: ./scripts/export/Dockerfile.osx
          push: false
          tags: ${{secrets.DOCKER_USERNAME}}/taylor:osx-${{steps.tag.outputs.tag}}

      -
        name: "Build Web export image"
        uses: docker/build-push-action@v2
        with:
          context: ./scripts/export/
          file: ./scripts/export/Dockerfile.web
          push: false
          tags: ${{secrets.DOCKER_USERNAME}}/taylor:web-${{steps.tag.outputs.tag}}

      -
        name: "Compile Taylor CLI"
        env:
          VERSION: ${{ steps.tag.outputs.tag }}
        run: |
          cd ./cli-tool
          mkdir exports

          docker run -u $(id -u ${USER}):$(id -g ${USER}) \
            --mount type=bind,source=$(pwd),target=/app/game/ \
            hellrok/taylor:linux-$VERSION

          docker run -u $(id -u ${USER}):$(id -g ${USER}) \
            --mount type=bind,source=$(pwd),target=/app/game/ \
            hellrok/taylor:windows-$VERSION

          docker run -u $(id -u ${USER}):$(id -g ${USER}) \
            --mount type=bind,source=$(pwd),target=/app/game/ \
            --env EXPORT=osx_no_app \
            hellrok/taylor:osx-$VERSION

          mkdir ../exports
          mv ./exports/* ../exports/

      -
        name: "Push Linux export image"
        uses: docker/build-push-action@v2
        with:
          context: ./scripts/export/
          file: ./scripts/export/Dockerfile.linux
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/taylor:latest,${{secrets.DOCKER_USERNAME}}/taylor:linux-${{steps.tag.outputs.tag}}

      -
        name: "Push Windows export image"
        uses: docker/build-push-action@v2
        with:
          context: ./scripts/export/
          file: ./scripts/export/Dockerfile.windows
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/taylor:windows-${{steps.tag.outputs.tag}}

      -
        name: "Push OSX export image"
        uses: docker/build-push-action@v2
        with:
          context: ./scripts/export/
          file: ./scripts/export/Dockerfile.osx
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/taylor:osx-${{steps.tag.outputs.tag}}

      -
        name: "Push Web export image"
        uses: docker/build-push-action@v2
        with:
          context: ./scripts/export/
          file: ./scripts/export/Dockerfile.web
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/taylor:web-${{steps.tag.outputs.tag}}

      - name: "Write release body"
        run: |
          ./scripts/generate_release_body.rb > release-body.md

      - uses: ncipollo/release-action@v1
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          bodyFile: release-body.md
          artifacts: |
            ./exports/*.zip
